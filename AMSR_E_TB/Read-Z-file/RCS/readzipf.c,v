head	1.5;
access;
symbols;
locks
	ytian:1.5; strict;
comment	@ * @;


1.5
date	2012.03.22.21.38.38;	author ytian;	state Exp;
branches;
next	1.4;

1.4
date	2010.08.20.15.36.20;	author ytian;	state Exp;
branches;
next	1.3;

1.3
date	2010.08.20.15.23.27;	author ytian;	state Exp;
branches;
next	1.2;

1.2
date	2010.08.20.14.22.26;	author ytian;	state Exp;
branches;
next	1.1;

1.1
date	2010.08.20.14.22.01;	author ytian;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Now use zlib to read gz file.
@
text
@//-----------------------BEGIN NOTICE -- DO NOT EDIT-----------------------
// NASA Goddard Space Flight Center Land Information System (LIS)
//
// See RELEASE_NOTES.txt for more information.
//
// The LIS source code and documentation are not in the public domain
// and may not be freely distributed.  Only qualified entities may receive 
// the source code and documentation. 
//
// Qualified entities must be covered by a Software Usage Agreement. 
// The Software Usage Agreement contains all the terms and conditions
// regarding the release of the LIS software.
//
// NASA GSFC MAKES NO REPRESENTATIONS ABOUT THE SUITABILITY OF THE
// SOFTWARE FOR ANY PURPOSE.  IT IS PROVIDED AS IS WITHOUT EXPRESS OR
// IMPLIED WARRANTY.  NEITHER NASA GSFC NOR THE US GOVERNMENT SHALL BE
// LIABLE FOR ANY DAMAGES SUFFERED BY THE USER OF THIS SOFTWARE.
//
// See the Software Usage Agreement for the full disclaimer of warranty.
//
//-------------------------END NOTICE -- DO NOT EDIT-----------------------

/* Unzip a ".gz", ".z" or ".Z" file, and read a specified number of bytes */
/* into array                                                             */
/* can not use fseek() to jump around for a pipe */ 

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <zlib.h>
#include "ftn_drv.h"


int FTN(readzipf)(char *file, char *array, int *recl)
{
  
  int nrd; 
  gzFile fp; 
  
  fp = gzopen(file, "rb"); 
  nrd = gzread(fp, array, *recl); 
  if (nrd != *recl) { 
     fprintf(stderr, "Zip file reading error, recl=%d nread=%d", *recl, nrd); 
     gzclose(fp); 
     return(-1); 
  }
  gzclose(fp); 
  return(nrd);  

}



// 3/12/12: Old way of reading. It seems "popen()" is causing problems for parallel 
// runs, as reported by Sujay.  
/* 
  char command[4096]; 
  FILE *fp; 
  int nrd; 

  snprintf(command, sizeof(command), "/usr/bin/gunzip -c %s", file); 
  fp=popen(command, "r"); 

  nrd=fread(array, 1, *recl, fp); 
  if (nrd != *recl) { 
     fprintf(stderr, "Zip file reading error, recl=%d nread=%d", *recl, nrd); 
     return(-1); 
  }
  fclose(fp);    
  return(nrd);  
}

*/ 

  
 
  
@


1.4
log
@*** empty log message ***
@
text
@d1 21
a22 1
/* $Id: readzipf.c,v 1.3 2010/08/20 15:23:27 ytian Exp ytian $ */
d30 2
d34 1
a34 1
int readzipf_(char *file, char *array, int *recl)
d36 13
d50 7
a63 3
//  if (fseek(fp, offset, SEEK_SET) != 0)  
//     fprintf(stderr, "fseek error, offset=%d ftell=%d ", offset, ftell(fp)); 

d72 2
@


1.3
log
@*** empty log message ***
@
text
@d2 1
a2 1
/* $Id: readzipf.c,v 1.2 2010/08/20 14:22:26 ytian Exp ytian $ */
d17 1
a17 1
  long nrd; 
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
/* $Id$ */
d27 1
a27 1
     fprintf(stderr, "Reading error, recl=%d nread=%d", *recl, nrd); 
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
/* $Id */
@
